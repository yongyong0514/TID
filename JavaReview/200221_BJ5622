import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
 
public class Main {
	public static void main(String[] args) throws IOException {
    
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
		String str = br.readLine();
        
		int length = str.length();
        
        int n = 0;
        
		for(int i = 0 ; i < length ; i++) {
        
			switch(str.charAt(i)) {
            
			case 'A' : case 'B': case 'C' : 
				n += 3;
				break;
                
			case 'D' : case 'E': case 'F' : 
				n += 4; 
				break;
                
			case 'G' : case 'H': case 'I' : 
				n += 5; 
				break;
                
			case 'J' : case 'K': case 'L' : 
				n += 6; 
				break;
                
			case 'M' : case 'N': case 'O' : 
				n += 7; 
				break;
                
			case 'P' : case 'Q': case 'R' : case 'S' :
				n += 8; 
				break;
                
			case 'T' : case 'U': case 'V' : 
				n += 9; 
				break;
                
			case 'W' : case 'X': case 'Y' : case 'Z' : 
				n += 10; 
				break;
			}
		}		
        
		System.out.print(n);
	}
}

이번 문제는 입력받은 문장의 문자들을 구식 전화기 다이얼에 숫자들에 포함된 문자들 기준으로 각 숫자에 해당되는 문자의 숫자를 더해서 출력하는 코드입니다.

이번 문제는 입력받은 문장의 각각 문자들이 구식 전화기 다이얼의 각 숫자가 가지는 알파벳에 해당되는 경우 그 숫자를 할당해서 모든 문자의 숫자의 합을 구하는 코드입니다.

입력받은 문자는 STRING형 str에 저장됩니다.

합을 더할 INT n을 생성하고 입력받은 문자의 길이를 저장할 INT length도 생성합니다.

반복문은 입력받은 str의 길이만큼 반복하면서 switch문을 이용해 입력받은 문장을 각각 하나씩 case에 대조해서 합계를 구할 n에 숫자를 반복해서 저장합니다.

모든 반복이 마치고 합계를 출력합니다.
