class Solution {
    public String solution(String s, int n) {
        
        //문자열을 다루는 문제에서는 StringBuilder로 효율을 높일 수 있습니다.
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < s.length(); i++) {
            
            //문자열을 반복문에 따라 문자 하나씩 char로
            char chr = s.charAt(i);
            
            //소문자 알파벳에 범위에 해당되는 경우,
            if(chr >= 'a' && chr <= 'z') {
                
                //입력받은 n만큼 더한 뒤, char형으로 chr에 다시 넣습니다.
                chr = (char)(chr + n);
                
                //이 때, 더한 n의 크기가 z보다 클 경우,
                if(chr > 'z') {
                    
                    //알파벳의 개수만큼 감소시켜 소문자를 유지합니다.     
                    chr -= 26;
                }
            
            //대문자 알파벳 범위에 해당하는 경우 위와 같이 처리합니다.
            } else if(chr >= 'A' && chr <= 'Z') {
                chr = (char)(chr + n);
                
                if(chr > 'Z') { 
                
                    chr -= 26;
                }
                
               
            }
            //StringBuilde의 append()로 +n 처리된 chr을 한글자씩 추가합니다.
             sb.append(chr);
            
        }
        
        //toString()으로 StringBuilder의 문자열이 담긴 sb를 String화 합니다.
        return sb.toString();
    }
}
