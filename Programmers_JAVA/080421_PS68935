import java.util.ArrayList;

class Solution {
    public int solution(int n) {
        int answer = 0;
        
        //10진법을 3진법으로 변환할 때, 변환된 자리수 값을 저장할 배열을 사용하는데, 문자형인 경우 StringBuilder를 사용하는 방법이 있지만, int형 배열 ArrayList를 사용해서 효율을 높일 수 있습니다.
        ArrayList<Integer> list = new ArrayList<Integer>();
        
        //3으로 나눌 수 있을 때까지 반복합니다
        while(n > 0) {
          
            //리스트에 3으로 나눈 나머지를 저장하고,
            list.add(n % 3);
            
            //n에 몫을 저장해서 다음 반복에 사용합니다.
            n = n / 3;
        }
        
        //size()를 사용해서 배열의 개수만큼 반복합니다.
        for(int i = 0; i < list.size(); i++) {
            
            //Math.pow(Double value, Double power)는 value^power 제곱함수의 형태를 가집니다.
            //list i 배열 값과 제곱함수를 곱한 값을 answer에 반복해서 누적합니다.
            //Math.powe()로 value 3인 제곱함수는 power를 list 배열의 전체 개수 -1(배열은 0부터 시작함)에 i만큼 감소시키면서 
            //power가 큰 값에서 작은값으로 감소하면서 배열i는 제곱함수를 역순으로 곱하게 되고,
            answer += (list.get(i) * Math.pow(3, list.size() - 1 - i));
            
        }
        
        //누적된 answer를 리턴합니다.
        return answer;
    
    }
}
